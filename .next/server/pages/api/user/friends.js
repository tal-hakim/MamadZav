"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/user/friends";
exports.ids = ["pages/api/user/friends"];
exports.modules = {

/***/ "bcryptjs":
/*!***************************!*\
  !*** external "bcryptjs" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("bcryptjs");

/***/ }),

/***/ "jsonwebtoken":
/*!*******************************!*\
  !*** external "jsonwebtoken" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("jsonwebtoken");

/***/ }),

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("mongoose");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fuser%2Ffriends&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cuser%5Cfriends.ts&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fuser%2Ffriends&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cuser%5Cfriends.ts&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_user_friends_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src\\pages\\api\\user\\friends.ts */ \"(api)/./src/pages/api/user/friends.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_user_friends_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_user_friends_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/user/friends\",\n        pathname: \"/api/user/friends\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_user_friends_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnVzZXIlMkZmcmllbmRzJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGc3JjJTVDcGFnZXMlNUNhcGklNUN1c2VyJTVDZnJpZW5kcy50cyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUNnRTtBQUNoRTtBQUNBLGlFQUFlLHdFQUFLLENBQUMsMkRBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLDJEQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmV0eS1jaGVjay1uZXR3b3JrLz82ZTBhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9zcmNcXFxccGFnZXNcXFxcYXBpXFxcXHVzZXJcXFxcZnJpZW5kcy50c1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3VzZXIvZnJpZW5kc1wiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3VzZXIvZnJpZW5kc1wiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fuser%2Ffriends&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cuser%5Cfriends.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/lib/db.ts":
/*!***********************!*\
  !*** ./src/lib/db.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst MONGODB_URI = process.env.MONGODB_URI;\nif (!MONGODB_URI) {\n    throw new Error(\"Please define the MONGODB_URI environment variable inside .env.local\");\n}\nlet cached = global.mongoose || {\n    conn: null,\n    promise: null\n};\nif (!global.mongoose) {\n    global.mongoose = cached;\n}\nasync function dbConnect() {\n    if (cached.conn) {\n        // Check if the connection is still valid\n        if ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection).readyState === 1) {\n            console.log(\"Using cached database connection\");\n            return cached.conn;\n        } else {\n            console.log(\"Cached connection is no longer valid, creating new connection...\");\n            cached.conn = null;\n            cached.promise = null;\n        }\n    }\n    if (!cached.promise) {\n        const opts = {\n            bufferCommands: false,\n            serverSelectionTimeoutMS: 10000,\n            socketTimeoutMS: 45000,\n            family: 4,\n            maxPoolSize: 10,\n            minPoolSize: 1,\n            connectTimeoutMS: 10000,\n            retryWrites: true,\n            retryReads: true\n        };\n        try {\n            console.log(\"Creating new database connection...\");\n            const mongooseInstance = (mongoose__WEBPACK_IMPORTED_MODULE_0___default());\n            cached.promise = mongoose__WEBPACK_IMPORTED_MODULE_0___default().connect(MONGODB_URI, opts).then(()=>{\n                console.log(\"MongoDB connected successfully\");\n                // Handle connection events\n                mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection.on(\"error\", (err)=>{\n                    console.error(\"MongoDB connection error:\", err);\n                    if ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection).readyState !== 1) {\n                        cached.conn = null;\n                        cached.promise = null;\n                    }\n                });\n                mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection.on(\"disconnected\", ()=>{\n                    console.warn(\"MongoDB disconnected\");\n                    if ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection).readyState !== 1) {\n                        cached.conn = null;\n                        cached.promise = null;\n                    }\n                });\n                mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection.on(\"connected\", ()=>{\n                    console.log(\"MongoDB connected\");\n                });\n                mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection.on(\"reconnected\", ()=>{\n                    console.log(\"MongoDB reconnected\");\n                    cached.conn = mongooseInstance;\n                });\n                // Enable debug mode for Mongoose operations in development\n                if (true) {\n                    mongoose__WEBPACK_IMPORTED_MODULE_0___default().set(\"debug\", true);\n                }\n                return mongooseInstance;\n            });\n        } catch (error) {\n            console.error(\"Error creating MongoDB connection:\", error);\n            cached.promise = null;\n            throw error;\n        }\n    } else {\n        console.log(\"Using existing connection promise\");\n    }\n    try {\n        console.log(\"Waiting for connection to be established...\");\n        const maxRetries = 3;\n        let retries = 0;\n        let lastError;\n        while(retries < maxRetries){\n            try {\n                cached.conn = await cached.promise;\n                console.log(\"Connection established successfully\");\n                return cached.conn;\n            } catch (error) {\n                lastError = error;\n                retries++;\n                console.error(`Failed to establish connection (attempt ${retries}/${maxRetries}):`, error);\n                if (retries < maxRetries) {\n                    console.log(`Retrying in ${retries * 2} seconds...`);\n                    await new Promise((resolve)=>setTimeout(resolve, retries * 2000));\n                    cached.promise = null;\n                }\n            }\n        }\n        console.error(\"Max retries reached, could not establish connection\");\n        throw lastError;\n    } catch (error) {\n        console.error(\"Error establishing MongoDB connection:\", error);\n        cached.promise = null;\n        throw error;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dbConnect);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/lib/db.ts\n");

/***/ }),

/***/ "(api)/./src/middleware/auth.ts":
/*!********************************!*\
  !*** ./src/middleware/auth.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authMiddleware: () => (/* binding */ authMiddleware),\n/* harmony export */   generateToken: () => (/* binding */ generateToken)\n/* harmony export */ });\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/models/User */ \"(api)/./src/models/User.ts\");\n\n\nconst JWT_SECRET = process.env.JWT_SECRET;\nif (!JWT_SECRET) {\n    throw new Error(\"Please define the JWT_SECRET environment variable inside .env.local\");\n}\nasync function authMiddleware(req, res, next) {\n    try {\n        const authHeader = req.headers.authorization;\n        if (!authHeader?.startsWith(\"Bearer \")) {\n            return res.status(401).json({\n                message: \"No token provided\"\n            });\n        }\n        const token = authHeader.split(\" \")[1];\n        const decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().verify(token, JWT_SECRET);\n        const user = await _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findById(decoded.id).select(\"-password\");\n        if (!user) {\n            return res.status(401).json({\n                message: \"User not found\"\n            });\n        }\n        req.user = user;\n        next();\n    } catch (error) {\n        return res.status(401).json({\n            message: \"Invalid token\"\n        });\n    }\n}\nfunction generateToken(userId) {\n    return jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().sign({\n        id: userId\n    }, JWT_SECRET, {\n        expiresIn: \"7d\"\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbWlkZGxld2FyZS9hdXRoLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQytCO0FBQ2E7QUFFNUMsTUFBTUUsYUFBYUMsUUFBUUMsR0FBRyxDQUFDRixVQUFVO0FBRXpDLElBQUksQ0FBQ0EsWUFBWTtJQUNmLE1BQU0sSUFBSUcsTUFBTTtBQUNsQjtBQU1PLGVBQWVDLGVBQ3BCQyxHQUF5QixFQUN6QkMsR0FBb0IsRUFDcEJDLElBQWdCO0lBRWhCLElBQUk7UUFDRixNQUFNQyxhQUFhSCxJQUFJSSxPQUFPLENBQUNDLGFBQWE7UUFFNUMsSUFBSSxDQUFDRixZQUFZRyxXQUFXLFlBQVk7WUFDdEMsT0FBT0wsSUFBSU0sTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFBRUMsU0FBUztZQUFvQjtRQUM3RDtRQUVBLE1BQU1DLFFBQVFQLFdBQVdRLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUN0QyxNQUFNQyxVQUFVbkIsMERBQVUsQ0FBQ2lCLE9BQU9mO1FBRWxDLE1BQU1tQixPQUFPLE1BQU1wQiw4Q0FBSUEsQ0FBQ3FCLFFBQVEsQ0FBQ0gsUUFBUUksRUFBRSxFQUFFQyxNQUFNLENBQUM7UUFDcEQsSUFBSSxDQUFDSCxNQUFNO1lBQ1QsT0FBT2IsSUFBSU0sTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFBRUMsU0FBUztZQUFpQjtRQUMxRDtRQUVBVCxJQUFJYyxJQUFJLEdBQUdBO1FBQ1haO0lBQ0YsRUFBRSxPQUFPZ0IsT0FBTztRQUNkLE9BQU9qQixJQUFJTSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVDLFNBQVM7UUFBZ0I7SUFDekQ7QUFDRjtBQUVPLFNBQVNVLGNBQWNDLE1BQWM7SUFDMUMsT0FBTzNCLHdEQUFRLENBQUM7UUFBRXVCLElBQUlJO0lBQU8sR0FBR3pCLFlBQVk7UUFBRTJCLFdBQVc7SUFBSztBQUNoRSIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmV0eS1jaGVjay1uZXR3b3JrLy4vc3JjL21pZGRsZXdhcmUvYXV0aC50cz9iOWFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRBcGlSZXF1ZXN0LCBOZXh0QXBpUmVzcG9uc2UgfSBmcm9tICduZXh0JztcclxuaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nO1xyXG5pbXBvcnQgeyBVc2VyLCBJVXNlciB9IGZyb20gJ0AvbW9kZWxzL1VzZXInO1xyXG5cclxuY29uc3QgSldUX1NFQ1JFVCA9IHByb2Nlc3MuZW52LkpXVF9TRUNSRVQ7XHJcblxyXG5pZiAoIUpXVF9TRUNSRVQpIHtcclxuICB0aHJvdyBuZXcgRXJyb3IoJ1BsZWFzZSBkZWZpbmUgdGhlIEpXVF9TRUNSRVQgZW52aXJvbm1lbnQgdmFyaWFibGUgaW5zaWRlIC5lbnYubG9jYWwnKTtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBBdXRoZW50aWNhdGVkUmVxdWVzdCBleHRlbmRzIE5leHRBcGlSZXF1ZXN0IHtcclxuICB1c2VyPzogSVVzZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhdXRoTWlkZGxld2FyZShcclxuICByZXE6IEF1dGhlbnRpY2F0ZWRSZXF1ZXN0LFxyXG4gIHJlczogTmV4dEFwaVJlc3BvbnNlLFxyXG4gIG5leHQ6ICgpID0+IHZvaWRcclxuKSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IGF1dGhIZWFkZXIgPSByZXEuaGVhZGVycy5hdXRob3JpemF0aW9uO1xyXG5cclxuICAgIGlmICghYXV0aEhlYWRlcj8uc3RhcnRzV2l0aCgnQmVhcmVyICcpKSB7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IG1lc3NhZ2U6ICdObyB0b2tlbiBwcm92aWRlZCcgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgdG9rZW4gPSBhdXRoSGVhZGVyLnNwbGl0KCcgJylbMV07XHJcbiAgICBjb25zdCBkZWNvZGVkID0gand0LnZlcmlmeSh0b2tlbiwgSldUX1NFQ1JFVCkgYXMgeyBpZDogc3RyaW5nIH07XHJcblxyXG4gICAgY29uc3QgdXNlciA9IGF3YWl0IFVzZXIuZmluZEJ5SWQoZGVjb2RlZC5pZCkuc2VsZWN0KCctcGFzc3dvcmQnKTtcclxuICAgIGlmICghdXNlcikge1xyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBtZXNzYWdlOiAnVXNlciBub3QgZm91bmQnIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHJlcS51c2VyID0gdXNlcjtcclxuICAgIG5leHQoKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgbWVzc2FnZTogJ0ludmFsaWQgdG9rZW4nIH0pO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlVG9rZW4odXNlcklkOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gIHJldHVybiBqd3Quc2lnbih7IGlkOiB1c2VySWQgfSwgSldUX1NFQ1JFVCwgeyBleHBpcmVzSW46ICc3ZCcgfSk7XHJcbn0gIl0sIm5hbWVzIjpbImp3dCIsIlVzZXIiLCJKV1RfU0VDUkVUIiwicHJvY2VzcyIsImVudiIsIkVycm9yIiwiYXV0aE1pZGRsZXdhcmUiLCJyZXEiLCJyZXMiLCJuZXh0IiwiYXV0aEhlYWRlciIsImhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwic3RhcnRzV2l0aCIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwidG9rZW4iLCJzcGxpdCIsImRlY29kZWQiLCJ2ZXJpZnkiLCJ1c2VyIiwiZmluZEJ5SWQiLCJpZCIsInNlbGVjdCIsImVycm9yIiwiZ2VuZXJhdGVUb2tlbiIsInVzZXJJZCIsInNpZ24iLCJleHBpcmVzSW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/middleware/auth.ts\n");

/***/ }),

/***/ "(api)/./src/models/User.ts":
/*!****************************!*\
  !*** ./src/models/User.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   User: () => (/* binding */ User)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst userSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    email: {\n        type: String,\n        required: true,\n        unique: true,\n        trim: true,\n        lowercase: true\n    },\n    username: {\n        type: String,\n        required: true,\n        unique: true,\n        trim: true,\n        lowercase: true,\n        minlength: 3,\n        maxlength: 30,\n        match: [\n            /^[a-zA-Z0-9_]+$/,\n            \"Username can only contain letters, numbers and underscores\"\n        ]\n    },\n    password: {\n        type: String,\n        required: true,\n        minlength: 6\n    },\n    name: {\n        type: String,\n        required: true,\n        trim: true\n    },\n    friends: [\n        {\n            type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n            ref: \"User\"\n        }\n    ],\n    friendRequests: [\n        {\n            from: {\n                type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n                ref: \"User\",\n                required: true\n            },\n            createdAt: {\n                type: Date,\n                default: Date.now\n            }\n        }\n    ],\n    lastCheckIn: {\n        type: Date,\n        default: null\n    }\n}, {\n    timestamps: true\n});\n// Hash password before saving\nuserSchema.pre(\"save\", async function(next) {\n    if (!this.isModified(\"password\")) return next();\n    try {\n        const salt = await bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().genSalt(10);\n        this.password = await bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().hash(this.password, salt);\n        next();\n    } catch (error) {\n        next(error);\n    }\n});\n// Compare password method\nuserSchema.methods.comparePassword = async function(candidatePassword) {\n    return bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().compare(candidatePassword, this.password);\n};\nconst User = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).User || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model(\"User\", userSchema);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbW9kZWxzL1VzZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBZ0M7QUFDRjtBQWdCOUIsTUFBTUUsYUFBYSxJQUFJRix3REFBZSxDQUFDO0lBQ3JDSSxPQUFPO1FBQ0xDLE1BQU1DO1FBQ05DLFVBQVU7UUFDVkMsUUFBUTtRQUNSQyxNQUFNO1FBQ05DLFdBQVc7SUFDYjtJQUNBQyxVQUFVO1FBQ1JOLE1BQU1DO1FBQ05DLFVBQVU7UUFDVkMsUUFBUTtRQUNSQyxNQUFNO1FBQ05DLFdBQVc7UUFDWEUsV0FBVztRQUNYQyxXQUFXO1FBQ1hDLE9BQU87WUFBQztZQUFtQjtTQUE2RDtJQUMxRjtJQUNBQyxVQUFVO1FBQ1JWLE1BQU1DO1FBQ05DLFVBQVU7UUFDVkssV0FBVztJQUNiO0lBQ0FJLE1BQU07UUFDSlgsTUFBTUM7UUFDTkMsVUFBVTtRQUNWRSxNQUFNO0lBQ1I7SUFDQVEsU0FBUztRQUFDO1lBQ1JaLE1BQU1MLHdEQUFlLENBQUNrQixLQUFLLENBQUNDLFFBQVE7WUFDcENDLEtBQUs7UUFDUDtLQUFFO0lBQ0ZDLGdCQUFnQjtRQUFDO1lBQ2ZDLE1BQU07Z0JBQ0pqQixNQUFNTCx3REFBZSxDQUFDa0IsS0FBSyxDQUFDQyxRQUFRO2dCQUNwQ0MsS0FBSztnQkFDTGIsVUFBVTtZQUNaO1lBQ0FnQixXQUFXO2dCQUNUbEIsTUFBTW1CO2dCQUNOQyxTQUFTRCxLQUFLRSxHQUFHO1lBQ25CO1FBQ0Y7S0FBRTtJQUNGQyxhQUFhO1FBQ1h0QixNQUFNbUI7UUFDTkMsU0FBUztJQUNYO0FBQ0YsR0FBRztJQUNERyxZQUFZO0FBQ2Q7QUFFQSw4QkFBOEI7QUFDOUIxQixXQUFXMkIsR0FBRyxDQUFDLFFBQVEsZUFBZUMsSUFBSTtJQUN4QyxJQUFJLENBQUMsSUFBSSxDQUFDQyxVQUFVLENBQUMsYUFBYSxPQUFPRDtJQUV6QyxJQUFJO1FBQ0YsTUFBTUUsT0FBTyxNQUFNL0IsdURBQWMsQ0FBQztRQUNsQyxJQUFJLENBQUNjLFFBQVEsR0FBRyxNQUFNZCxvREFBVyxDQUFDLElBQUksQ0FBQ2MsUUFBUSxFQUFFaUI7UUFDakRGO0lBQ0YsRUFBRSxPQUFPSyxPQUFPO1FBQ2RMLEtBQUtLO0lBQ1A7QUFDRjtBQUVBLDBCQUEwQjtBQUMxQmpDLFdBQVdrQyxPQUFPLENBQUNDLGVBQWUsR0FBRyxlQUFlQyxpQkFBeUI7SUFDM0UsT0FBT3JDLHVEQUFjLENBQUNxQyxtQkFBbUIsSUFBSSxDQUFDdkIsUUFBUTtBQUN4RDtBQUVPLE1BQU15QixPQUFPeEMsd0RBQWUsQ0FBQ3dDLElBQUksSUFBSXhDLHFEQUFjLENBQVEsUUFBUUUsWUFBWSIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmV0eS1jaGVjay1uZXR3b3JrLy4vc3JjL21vZGVscy9Vc2VyLnRzPzA5NmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcclxuaW1wb3J0IGJjcnlwdCBmcm9tICdiY3J5cHRqcyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElVc2VyIGV4dGVuZHMgbW9uZ29vc2UuRG9jdW1lbnQge1xyXG4gIGVtYWlsOiBzdHJpbmc7XHJcbiAgcGFzc3dvcmQ6IHN0cmluZztcclxuICBuYW1lOiBzdHJpbmc7XHJcbiAgdXNlcm5hbWU6IHN0cmluZztcclxuICBmcmllbmRzOiBtb25nb29zZS5UeXBlcy5PYmplY3RJZFtdO1xyXG4gIGZyaWVuZFJlcXVlc3RzOiB7XHJcbiAgICBmcm9tOiBtb25nb29zZS5UeXBlcy5PYmplY3RJZDtcclxuICAgIGNyZWF0ZWRBdDogRGF0ZTtcclxuICB9W107XHJcbiAgbGFzdENoZWNrSW46IERhdGUgfCBudWxsO1xyXG4gIGNvbXBhcmVQYXNzd29yZChjYW5kaWRhdGVQYXNzd29yZDogc3RyaW5nKTogUHJvbWlzZTxib29sZWFuPjtcclxufVxyXG5cclxuY29uc3QgdXNlclNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xyXG4gIGVtYWlsOiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgIHVuaXF1ZTogdHJ1ZSxcclxuICAgIHRyaW06IHRydWUsXHJcbiAgICBsb3dlcmNhc2U6IHRydWUsXHJcbiAgfSxcclxuICB1c2VybmFtZToge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICB1bmlxdWU6IHRydWUsXHJcbiAgICB0cmltOiB0cnVlLFxyXG4gICAgbG93ZXJjYXNlOiB0cnVlLFxyXG4gICAgbWlubGVuZ3RoOiAzLFxyXG4gICAgbWF4bGVuZ3RoOiAzMCxcclxuICAgIG1hdGNoOiBbL15bYS16QS1aMC05X10rJC8sICdVc2VybmFtZSBjYW4gb25seSBjb250YWluIGxldHRlcnMsIG51bWJlcnMgYW5kIHVuZGVyc2NvcmVzJ11cclxuICB9LFxyXG4gIHBhc3N3b3JkOiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgIG1pbmxlbmd0aDogNixcclxuICB9LFxyXG4gIG5hbWU6IHtcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gICAgdHJpbTogdHJ1ZSxcclxuICB9LFxyXG4gIGZyaWVuZHM6IFt7XHJcbiAgICB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcbiAgICByZWY6ICdVc2VyJyxcclxuICB9XSxcclxuICBmcmllbmRSZXF1ZXN0czogW3tcclxuICAgIGZyb206IHtcclxuICAgICAgdHlwZTogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG4gICAgICByZWY6ICdVc2VyJyxcclxuICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgIH0sXHJcbiAgICBjcmVhdGVkQXQ6IHtcclxuICAgICAgdHlwZTogRGF0ZSxcclxuICAgICAgZGVmYXVsdDogRGF0ZS5ub3dcclxuICAgIH1cclxuICB9XSxcclxuICBsYXN0Q2hlY2tJbjoge1xyXG4gICAgdHlwZTogRGF0ZSxcclxuICAgIGRlZmF1bHQ6IG51bGwsXHJcbiAgfSxcclxufSwge1xyXG4gIHRpbWVzdGFtcHM6IHRydWUsXHJcbn0pO1xyXG5cclxuLy8gSGFzaCBwYXNzd29yZCBiZWZvcmUgc2F2aW5nXHJcbnVzZXJTY2hlbWEucHJlKCdzYXZlJywgYXN5bmMgZnVuY3Rpb24obmV4dCkge1xyXG4gIGlmICghdGhpcy5pc01vZGlmaWVkKCdwYXNzd29yZCcpKSByZXR1cm4gbmV4dCgpO1xyXG5cclxuICB0cnkge1xyXG4gICAgY29uc3Qgc2FsdCA9IGF3YWl0IGJjcnlwdC5nZW5TYWx0KDEwKTtcclxuICAgIHRoaXMucGFzc3dvcmQgPSBhd2FpdCBiY3J5cHQuaGFzaCh0aGlzLnBhc3N3b3JkLCBzYWx0KTtcclxuICAgIG5leHQoKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgbmV4dChlcnJvciBhcyBFcnJvcik7XHJcbiAgfVxyXG59KTtcclxuXHJcbi8vIENvbXBhcmUgcGFzc3dvcmQgbWV0aG9kXHJcbnVzZXJTY2hlbWEubWV0aG9kcy5jb21wYXJlUGFzc3dvcmQgPSBhc3luYyBmdW5jdGlvbihjYW5kaWRhdGVQYXNzd29yZDogc3RyaW5nKTogUHJvbWlzZTxib29sZWFuPiB7XHJcbiAgcmV0dXJuIGJjcnlwdC5jb21wYXJlKGNhbmRpZGF0ZVBhc3N3b3JkLCB0aGlzLnBhc3N3b3JkKTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBVc2VyID0gbW9uZ29vc2UubW9kZWxzLlVzZXIgfHwgbW9uZ29vc2UubW9kZWw8SVVzZXI+KCdVc2VyJywgdXNlclNjaGVtYSk7ICJdLCJuYW1lcyI6WyJtb25nb29zZSIsImJjcnlwdCIsInVzZXJTY2hlbWEiLCJTY2hlbWEiLCJlbWFpbCIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsInVuaXF1ZSIsInRyaW0iLCJsb3dlcmNhc2UiLCJ1c2VybmFtZSIsIm1pbmxlbmd0aCIsIm1heGxlbmd0aCIsIm1hdGNoIiwicGFzc3dvcmQiLCJuYW1lIiwiZnJpZW5kcyIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJmcmllbmRSZXF1ZXN0cyIsImZyb20iLCJjcmVhdGVkQXQiLCJEYXRlIiwiZGVmYXVsdCIsIm5vdyIsImxhc3RDaGVja0luIiwidGltZXN0YW1wcyIsInByZSIsIm5leHQiLCJpc01vZGlmaWVkIiwic2FsdCIsImdlblNhbHQiLCJoYXNoIiwiZXJyb3IiLCJtZXRob2RzIiwiY29tcGFyZVBhc3N3b3JkIiwiY2FuZGlkYXRlUGFzc3dvcmQiLCJjb21wYXJlIiwiVXNlciIsIm1vZGVscyIsIm1vZGVsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/models/User.ts\n");

/***/ }),

/***/ "(api)/./src/pages/api/user/friends.ts":
/*!***************************************!*\
  !*** ./src/pages/api/user/friends.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ withAuth)\n/* harmony export */ });\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/db */ \"(api)/./src/lib/db.ts\");\n/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/models/User */ \"(api)/./src/models/User.ts\");\n/* harmony import */ var _middleware_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/middleware/auth */ \"(api)/./src/middleware/auth.ts\");\n\n\n\nasync function handler(req, res) {\n    console.log(\"Friends API called with method:\", req.method);\n    if (![\n        \"GET\",\n        \"POST\",\n        \"DELETE\",\n        \"PUT\"\n    ].includes(req.method || \"\")) {\n        return res.status(405).json({\n            message: \"Method not allowed\"\n        });\n    }\n    try {\n        // Connect to database\n        try {\n            console.log(\"Attempting to connect to MongoDB...\");\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n            console.log(\"Successfully connected to MongoDB\");\n        } catch (error) {\n            console.error(\"Database connection error:\", error);\n            return res.status(500).json({\n                message: \"Database connection failed\",\n                error: error instanceof Error ? error.message : \"Unknown error\"\n            });\n        }\n        if (!req.user) {\n            console.log(\"No user found in request\");\n            return res.status(401).json({\n                message: \"Not authenticated\"\n            });\n        }\n        console.log(\"User found in request:\", req.user._id);\n        const user = req.user;\n        // GET: Fetch friends list and friend requests\n        if (req.method === \"GET\") {\n            try {\n                // First try to find the user without population to ensure they exist\n                console.log(\"Looking up user:\", user._id);\n                const userExists = await _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findById(user._id);\n                if (!userExists) {\n                    console.error(\"User not found in database:\", user._id);\n                    return res.status(404).json({\n                        message: \"User not found\"\n                    });\n                }\n                console.log(\"Found user in database\");\n                // Then populate the data\n                console.log(\"Populating user data...\");\n                const userWithData = await _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findById(user._id).populate({\n                    path: \"friends\",\n                    select: \"name email username lastCheckIn\"\n                }).populate({\n                    path: \"friendRequests.from\",\n                    select: \"name email username\"\n                }).select(\"friends friendRequests\").lean();\n                if (!userWithData) {\n                    console.error(\"Failed to populate user data:\", user._id);\n                    return res.status(500).json({\n                        message: \"Failed to fetch user data\"\n                    });\n                }\n                console.log(\"Successfully populated user data\");\n                // Safely map friends with error handling\n                console.log(\"Raw friends data:\", userWithData.friends);\n                const friends = (userWithData.friends || []).filter((friend)=>friend && friend._id).map((friend)=>({\n                        id: friend._id.toString(),\n                        name: friend.name,\n                        username: friend.username,\n                        email: friend.email,\n                        lastCheckIn: friend.lastCheckIn\n                    }));\n                console.log(\"Processed friends:\", friends.length);\n                // Safely map friend requests with error handling\n                console.log(\"Raw friend requests data:\", userWithData.friendRequests);\n                const friendRequests = (userWithData.friendRequests || []).filter((request)=>request && request.from && request.from._id).map((request)=>({\n                        id: request.from._id.toString(),\n                        name: request.from.name,\n                        username: request.from.username,\n                        email: request.from.email,\n                        createdAt: request.createdAt\n                    }));\n                console.log(\"Processed friend requests:\", friendRequests.length);\n                return res.status(200).json({\n                    friends,\n                    friendRequests\n                });\n            } catch (error) {\n                console.error(\"Error fetching friends and requests:\", error);\n                return res.status(500).json({\n                    message: \"Error fetching friends and requests\",\n                    error: error instanceof Error ? error.message : \"Unknown error\"\n                });\n            }\n        }\n        const { username } = req.body;\n        if (!username) {\n            return res.status(400).json({\n                message: \"Username is required\"\n            });\n        }\n        // POST: Send a friend request\n        if (req.method === \"POST\") {\n            try {\n                // Check if friend exists\n                const friend = await _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findOne({\n                    username: username.toLowerCase()\n                });\n                if (!friend) {\n                    return res.status(404).json({\n                        message: \"User not found\"\n                    });\n                }\n                // Can't add yourself\n                if (friend._id.toString() === user._id.toString()) {\n                    return res.status(400).json({\n                        message: \"Cannot add yourself as a friend\"\n                    });\n                }\n                // Check if already friends\n                const areFriends = user.friends.some((friendId)=>friendId.toString() === friend._id.toString());\n                if (areFriends) {\n                    return res.status(400).json({\n                        message: \"Already friends\"\n                    });\n                }\n                // Check if friend request already sent\n                const existingRequest = friend.friendRequests.find((request)=>request.from.toString() === user._id.toString());\n                if (existingRequest) {\n                    return res.status(400).json({\n                        message: \"Friend request already sent\"\n                    });\n                }\n                // Check if they sent you a request\n                const theirRequest = user.friendRequests.find((request)=>request.from.toString() === friend._id.toString());\n                if (theirRequest) {\n                    return res.status(400).json({\n                        message: \"This user has already sent you a friend request. Check your friend requests to accept it.\"\n                    });\n                }\n                // Add friend request\n                await _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findByIdAndUpdate(friend._id, {\n                    $push: {\n                        friendRequests: {\n                            from: user._id,\n                            createdAt: new Date()\n                        }\n                    }\n                }, {\n                    new: true\n                });\n                return res.status(200).json({\n                    message: \"Friend request sent successfully\"\n                });\n            } catch (error) {\n                console.error(\"Error sending friend request:\", error);\n                return res.status(500).json({\n                    message: \"Error sending friend request\"\n                });\n            }\n        }\n        // PUT: Accept a friend request\n        if (req.method === \"PUT\") {\n            try {\n                console.log(\"\\n=== START: Friend Request Acceptance ===\");\n                console.log(\"Raw request body:\", JSON.stringify(req.body));\n                console.log(\"Username from request:\", username);\n                console.log(\"Current user ID:\", user._id);\n                // First get the fully populated user document\n                console.log(\"\\nFetching current user with populated data...\");\n                const currentUser = await _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findById(user._id).populate({\n                    path: \"friendRequests.from\",\n                    select: \"name email username\"\n                }).lean().exec();\n                if (!currentUser) {\n                    console.error(\"Could not find current user with populated data\");\n                    return res.status(500).json({\n                        message: \"Error loading user data\"\n                    });\n                }\n                // Log the full user object for debugging\n                console.log(\"\\nCurrent user data:\", JSON.stringify({\n                    _id: currentUser._id,\n                    friendRequests: currentUser.friendRequests\n                }, null, 2));\n                console.log(\"\\nLooking for friend with username:\", username);\n                const friend = await _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findOne({\n                    username: username.toLowerCase()\n                });\n                if (!friend) {\n                    console.log(\"Friend not found with username:\", username);\n                    return res.status(404).json({\n                        message: \"User not found\"\n                    });\n                }\n                console.log(\"Found friend:\", {\n                    id: friend._id,\n                    username: friend.username\n                });\n                // Check if there's a pending request by comparing usernames\n                console.log(\"\\nChecking for pending request...\");\n                console.log(\"Number of friend requests:\", currentUser.friendRequests?.length || 0);\n                const pendingRequest = currentUser.friendRequests?.find((request)=>{\n                    const matches = request.from.username.toLowerCase() === username.toLowerCase();\n                    console.log(\"Checking request:\", {\n                        fromUsername: request.from.username,\n                        targetUsername: username,\n                        matches\n                    });\n                    return matches;\n                });\n                if (!pendingRequest) {\n                    console.log(\"\\nNo pending request found. All current requests:\", JSON.stringify(currentUser.friendRequests?.map((r)=>({\n                            fromUsername: r.from.username,\n                            fromId: r.from._id\n                        })), null, 2));\n                    return res.status(400).json({\n                        message: \"No friend request found from this user\"\n                    });\n                }\n                console.log(\"\\nFound pending request:\", {\n                    from: {\n                        id: pendingRequest.from._id,\n                        username: pendingRequest.from.username\n                    }\n                });\n                // Remove the request and add to friends for both users\n                console.log(\"\\nUpdating both users...\");\n                console.log(\"Update query:\", JSON.stringify({\n                    $pull: {\n                        \"friendRequests\": {\n                            \"from\": friend._id\n                        }\n                    },\n                    $addToSet: {\n                        friends: friend._id\n                    }\n                }, null, 2));\n                const [updatedUser, updatedFriend] = await Promise.all([\n                    _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findByIdAndUpdate(currentUser._id, {\n                        $pull: {\n                            \"friendRequests\": {\n                                \"from\": friend._id\n                            }\n                        },\n                        $addToSet: {\n                            friends: friend._id\n                        }\n                    }, {\n                        new: true,\n                        runValidators: true\n                    }).populate(\"friends\", \"name email username lastCheckIn\"),\n                    _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findByIdAndUpdate(friend._id, {\n                        $addToSet: {\n                            friends: currentUser._id\n                        }\n                    }, {\n                        new: true,\n                        runValidators: true\n                    })\n                ]);\n                if (!updatedUser || !updatedFriend) {\n                    console.error(\"\\nFailed to update documents:\", {\n                        updatedUser: !!updatedUser,\n                        updatedFriend: !!updatedFriend\n                    });\n                    throw new Error(\"Failed to update user or friend\");\n                }\n                console.log(\"\\nSuccessfully updated both users\");\n                console.log(\"Updated user friends:\", updatedUser.friends);\n                console.log(\"=== END: Friend Request Acceptance ===\\n\");\n                return res.status(200).json({\n                    message: \"Friend request accepted\",\n                    friend: {\n                        id: friend._id,\n                        name: friend.name,\n                        username: friend.username,\n                        email: friend.email,\n                        lastCheckIn: friend.lastCheckIn\n                    }\n                });\n            } catch (error) {\n                console.error(\"Error accepting friend request:\", error);\n                return res.status(500).json({\n                    message: \"Error accepting friend request\"\n                });\n            }\n        }\n        // DELETE: Reject a friend request or remove a friend\n        if (req.method === \"DELETE\") {\n            try {\n                const friend = await _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findOne({\n                    username: username.toLowerCase()\n                });\n                if (!friend) {\n                    return res.status(404).json({\n                        message: \"User not found\"\n                    });\n                }\n                // Check if it's a friend request rejection\n                const requestIndex = user.friendRequests.findIndex((request)=>request.from.toString() === friend._id.toString());\n                if (requestIndex !== -1) {\n                    // Reject friend request\n                    await _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findByIdAndUpdate(user._id, {\n                        $pull: {\n                            friendRequests: {\n                                from: friend._id\n                            }\n                        }\n                    }, {\n                        new: true\n                    });\n                    return res.status(200).json({\n                        message: \"Friend request rejected\"\n                    });\n                }\n                // If not a request, remove from friends list\n                const [updatedUser, updatedFriend] = await Promise.all([\n                    _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findByIdAndUpdate(user._id, {\n                        $pull: {\n                            friends: friend._id\n                        }\n                    }, {\n                        new: true\n                    }),\n                    _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findByIdAndUpdate(friend._id, {\n                        $pull: {\n                            friends: user._id\n                        }\n                    }, {\n                        new: true\n                    })\n                ]);\n                if (!updatedUser || !updatedFriend) {\n                    throw new Error(\"Failed to update user or friend\");\n                }\n                return res.status(200).json({\n                    message: \"Friend removed successfully\"\n                });\n            } catch (error) {\n                console.error(\"Error handling friend request/removal:\", error);\n                return res.status(500).json({\n                    message: \"Error processing friend operation\"\n                });\n            }\n        }\n    } catch (error) {\n        console.error(\"Friends operation error:\", error);\n        return res.status(500).json({\n            message: \"Error processing friends operation\"\n        });\n    }\n}\nfunction withAuth(req, res) {\n    return (0,_middleware_auth__WEBPACK_IMPORTED_MODULE_2__.authMiddleware)(req, res, ()=>handler(req, res));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/user/friends.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fuser%2Ffriends&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cuser%5Cfriends.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();