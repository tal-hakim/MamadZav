"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/user/friends";
exports.ids = ["pages/api/user/friends"];
exports.modules = {

/***/ "bcryptjs":
/*!***************************!*\
  !*** external "bcryptjs" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("bcryptjs");

/***/ }),

/***/ "jsonwebtoken":
/*!*******************************!*\
  !*** external "jsonwebtoken" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("jsonwebtoken");

/***/ }),

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("mongoose");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fuser%2Ffriends&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cuser%5Cfriends.ts&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fuser%2Ffriends&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cuser%5Cfriends.ts&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_user_friends_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src\\pages\\api\\user\\friends.ts */ \"(api)/./src/pages/api/user/friends.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_user_friends_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_user_friends_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/user/friends\",\n        pathname: \"/api/user/friends\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_user_friends_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnVzZXIlMkZmcmllbmRzJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGc3JjJTVDcGFnZXMlNUNhcGklNUN1c2VyJTVDZnJpZW5kcy50cyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUNnRTtBQUNoRTtBQUNBLGlFQUFlLHdFQUFLLENBQUMsMkRBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLDJEQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmV0eS1jaGVjay1uZXR3b3JrLz82ZTBhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9zcmNcXFxccGFnZXNcXFxcYXBpXFxcXHVzZXJcXFxcZnJpZW5kcy50c1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3VzZXIvZnJpZW5kc1wiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3VzZXIvZnJpZW5kc1wiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fuser%2Ffriends&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cuser%5Cfriends.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/lib/db.ts":
/*!***********************!*\
  !*** ./src/lib/db.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst MONGODB_URI = process.env.MONGODB_URI;\nif (!MONGODB_URI) {\n    throw new Error(\"Please define the MONGODB_URI environment variable inside .env.local\");\n}\nlet cached = global.mongoose || {\n    conn: null,\n    promise: null\n};\nif (!global.mongoose) {\n    global.mongoose = cached;\n}\nasync function dbConnect() {\n    if (cached.conn) {\n        // Check if the connection is still valid\n        if ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection).readyState === 1) {\n            console.log(\"Using cached database connection\");\n            return cached.conn;\n        } else {\n            console.log(\"Cached connection is no longer valid, creating new connection...\");\n            cached.conn = null;\n            cached.promise = null;\n        }\n    }\n    if (!cached.promise) {\n        const opts = {\n            bufferCommands: false,\n            serverSelectionTimeoutMS: 10000,\n            socketTimeoutMS: 45000,\n            family: 4,\n            maxPoolSize: 10,\n            minPoolSize: 1,\n            connectTimeoutMS: 10000,\n            retryWrites: true,\n            retryReads: true\n        };\n        try {\n            console.log(\"Creating new database connection...\");\n            const mongooseInstance = (mongoose__WEBPACK_IMPORTED_MODULE_0___default());\n            cached.promise = mongoose__WEBPACK_IMPORTED_MODULE_0___default().connect(MONGODB_URI, opts).then(()=>{\n                console.log(\"MongoDB connected successfully\");\n                // Handle connection events\n                mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection.on(\"error\", (err)=>{\n                    console.error(\"MongoDB connection error:\", err);\n                    if ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection).readyState !== 1) {\n                        cached.conn = null;\n                        cached.promise = null;\n                    }\n                });\n                mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection.on(\"disconnected\", ()=>{\n                    console.warn(\"MongoDB disconnected\");\n                    if ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection).readyState !== 1) {\n                        cached.conn = null;\n                        cached.promise = null;\n                    }\n                });\n                mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection.on(\"connected\", ()=>{\n                    console.log(\"MongoDB connected\");\n                });\n                mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection.on(\"reconnected\", ()=>{\n                    console.log(\"MongoDB reconnected\");\n                    cached.conn = mongooseInstance;\n                });\n                // Enable debug mode for Mongoose operations in development\n                if (true) {\n                    mongoose__WEBPACK_IMPORTED_MODULE_0___default().set(\"debug\", true);\n                }\n                return mongooseInstance;\n            });\n        } catch (error) {\n            console.error(\"Error creating MongoDB connection:\", error);\n            cached.promise = null;\n            throw error;\n        }\n    } else {\n        console.log(\"Using existing connection promise\");\n    }\n    try {\n        console.log(\"Waiting for connection to be established...\");\n        const maxRetries = 3;\n        let retries = 0;\n        let lastError;\n        while(retries < maxRetries){\n            try {\n                cached.conn = await cached.promise;\n                console.log(\"Connection established successfully\");\n                return cached.conn;\n            } catch (error) {\n                lastError = error;\n                retries++;\n                console.error(`Failed to establish connection (attempt ${retries}/${maxRetries}):`, error);\n                if (retries < maxRetries) {\n                    console.log(`Retrying in ${retries * 2} seconds...`);\n                    await new Promise((resolve)=>setTimeout(resolve, retries * 2000));\n                    cached.promise = null;\n                }\n            }\n        }\n        console.error(\"Max retries reached, could not establish connection\");\n        throw lastError;\n    } catch (error) {\n        console.error(\"Error establishing MongoDB connection:\", error);\n        cached.promise = null;\n        throw error;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dbConnect);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/lib/db.ts\n");

/***/ }),

/***/ "(api)/./src/lib/logger.ts":
/*!***************************!*\
  !*** ./src/lib/logger.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst LOG_DIR = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), \"logs\");\nconst LOG_FILE = path__WEBPACK_IMPORTED_MODULE_1___default().join(LOG_DIR, \"app.log\");\n// Create logs directory if it doesn't exist\nif (!fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(LOG_DIR)) {\n    fs__WEBPACK_IMPORTED_MODULE_0___default().mkdirSync(LOG_DIR, {\n        recursive: true\n    });\n}\nfunction formatMessage(level, message, data) {\n    const timestamp = new Date().toISOString();\n    const dataStr = data ? `\\n${JSON.stringify(data, null, 2)}` : \"\";\n    return `[${timestamp}] ${level}: ${message}${dataStr}\\n`;\n}\nconst logger = {\n    info: (message, data)=>{\n        const logMessage = formatMessage(\"INFO\", message, data);\n        fs__WEBPACK_IMPORTED_MODULE_0___default().appendFileSync(LOG_FILE, logMessage);\n        console.log(message, data || \"\");\n    },\n    error: (message, error)=>{\n        const logMessage = formatMessage(\"ERROR\", message, error);\n        fs__WEBPACK_IMPORTED_MODULE_0___default().appendFileSync(LOG_FILE, logMessage);\n        console.error(message, error || \"\");\n    },\n    debug: (message, data)=>{\n        const logMessage = formatMessage(\"DEBUG\", message, data);\n        fs__WEBPACK_IMPORTED_MODULE_0___default().appendFileSync(LOG_FILE, logMessage);\n        console.log(message, data || \"\");\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbGliL2xvZ2dlci50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFvQjtBQUNJO0FBRXhCLE1BQU1FLFVBQVVELGdEQUFTLENBQUNHLFFBQVFDLEdBQUcsSUFBSTtBQUN6QyxNQUFNQyxXQUFXTCxnREFBUyxDQUFDQyxTQUFTO0FBRXBDLDRDQUE0QztBQUM1QyxJQUFJLENBQUNGLG9EQUFhLENBQUNFLFVBQVU7SUFDM0JGLG1EQUFZLENBQUNFLFNBQVM7UUFBRU8sV0FBVztJQUFLO0FBQzFDO0FBRUEsU0FBU0MsY0FBY0MsS0FBYSxFQUFFQyxPQUFlLEVBQUVDLElBQVU7SUFDL0QsTUFBTUMsWUFBWSxJQUFJQyxPQUFPQyxXQUFXO0lBQ3hDLE1BQU1DLFVBQVVKLE9BQU8sQ0FBQyxFQUFFLEVBQUVLLEtBQUtDLFNBQVMsQ0FBQ04sTUFBTSxNQUFNLEdBQUcsQ0FBQyxHQUFHO0lBQzlELE9BQU8sQ0FBQyxDQUFDLEVBQUVDLFVBQVUsRUFBRSxFQUFFSCxNQUFNLEVBQUUsRUFBRUMsUUFBUSxFQUFFSyxRQUFRLEVBQUUsQ0FBQztBQUMxRDtBQUVPLE1BQU1HLFNBQVM7SUFDcEJDLE1BQU0sQ0FBQ1QsU0FBaUJDO1FBQ3RCLE1BQU1TLGFBQWFaLGNBQWMsUUFBUUUsU0FBU0M7UUFDbERiLHdEQUFpQixDQUFDTSxVQUFVZ0I7UUFDNUJFLFFBQVFDLEdBQUcsQ0FBQ2IsU0FBU0MsUUFBUTtJQUMvQjtJQUVBYSxPQUFPLENBQUNkLFNBQWlCYztRQUN2QixNQUFNSixhQUFhWixjQUFjLFNBQVNFLFNBQVNjO1FBQ25EMUIsd0RBQWlCLENBQUNNLFVBQVVnQjtRQUM1QkUsUUFBUUUsS0FBSyxDQUFDZCxTQUFTYyxTQUFTO0lBQ2xDO0lBRUFDLE9BQU8sQ0FBQ2YsU0FBaUJDO1FBQ3ZCLE1BQU1TLGFBQWFaLGNBQWMsU0FBU0UsU0FBU0M7UUFDbkRiLHdEQUFpQixDQUFDTSxVQUFVZ0I7UUFDNUJFLFFBQVFDLEdBQUcsQ0FBQ2IsU0FBU0MsUUFBUTtJQUMvQjtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYWZldHktY2hlY2stbmV0d29yay8uL3NyYy9saWIvbG9nZ2VyLnRzP2I0OWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZzIGZyb20gJ2ZzJztcclxuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XHJcblxyXG5jb25zdCBMT0dfRElSID0gcGF0aC5qb2luKHByb2Nlc3MuY3dkKCksICdsb2dzJyk7XHJcbmNvbnN0IExPR19GSUxFID0gcGF0aC5qb2luKExPR19ESVIsICdhcHAubG9nJyk7XHJcblxyXG4vLyBDcmVhdGUgbG9ncyBkaXJlY3RvcnkgaWYgaXQgZG9lc24ndCBleGlzdFxyXG5pZiAoIWZzLmV4aXN0c1N5bmMoTE9HX0RJUikpIHtcclxuICBmcy5ta2RpclN5bmMoTE9HX0RJUiwgeyByZWN1cnNpdmU6IHRydWUgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGZvcm1hdE1lc3NhZ2UobGV2ZWw6IHN0cmluZywgbWVzc2FnZTogc3RyaW5nLCBkYXRhPzogYW55KTogc3RyaW5nIHtcclxuICBjb25zdCB0aW1lc3RhbXAgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCk7XHJcbiAgY29uc3QgZGF0YVN0ciA9IGRhdGEgPyBgXFxuJHtKU09OLnN0cmluZ2lmeShkYXRhLCBudWxsLCAyKX1gIDogJyc7XHJcbiAgcmV0dXJuIGBbJHt0aW1lc3RhbXB9XSAke2xldmVsfTogJHttZXNzYWdlfSR7ZGF0YVN0cn1cXG5gO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgbG9nZ2VyID0ge1xyXG4gIGluZm86IChtZXNzYWdlOiBzdHJpbmcsIGRhdGE/OiBhbnkpID0+IHtcclxuICAgIGNvbnN0IGxvZ01lc3NhZ2UgPSBmb3JtYXRNZXNzYWdlKCdJTkZPJywgbWVzc2FnZSwgZGF0YSk7XHJcbiAgICBmcy5hcHBlbmRGaWxlU3luYyhMT0dfRklMRSwgbG9nTWVzc2FnZSk7XHJcbiAgICBjb25zb2xlLmxvZyhtZXNzYWdlLCBkYXRhIHx8ICcnKTtcclxuICB9LFxyXG4gIFxyXG4gIGVycm9yOiAobWVzc2FnZTogc3RyaW5nLCBlcnJvcj86IGFueSkgPT4ge1xyXG4gICAgY29uc3QgbG9nTWVzc2FnZSA9IGZvcm1hdE1lc3NhZ2UoJ0VSUk9SJywgbWVzc2FnZSwgZXJyb3IpO1xyXG4gICAgZnMuYXBwZW5kRmlsZVN5bmMoTE9HX0ZJTEUsIGxvZ01lc3NhZ2UpO1xyXG4gICAgY29uc29sZS5lcnJvcihtZXNzYWdlLCBlcnJvciB8fCAnJyk7XHJcbiAgfSxcclxuICBcclxuICBkZWJ1ZzogKG1lc3NhZ2U6IHN0cmluZywgZGF0YT86IGFueSkgPT4ge1xyXG4gICAgY29uc3QgbG9nTWVzc2FnZSA9IGZvcm1hdE1lc3NhZ2UoJ0RFQlVHJywgbWVzc2FnZSwgZGF0YSk7XHJcbiAgICBmcy5hcHBlbmRGaWxlU3luYyhMT0dfRklMRSwgbG9nTWVzc2FnZSk7XHJcbiAgICBjb25zb2xlLmxvZyhtZXNzYWdlLCBkYXRhIHx8ICcnKTtcclxuICB9XHJcbn07ICJdLCJuYW1lcyI6WyJmcyIsInBhdGgiLCJMT0dfRElSIiwiam9pbiIsInByb2Nlc3MiLCJjd2QiLCJMT0dfRklMRSIsImV4aXN0c1N5bmMiLCJta2RpclN5bmMiLCJyZWN1cnNpdmUiLCJmb3JtYXRNZXNzYWdlIiwibGV2ZWwiLCJtZXNzYWdlIiwiZGF0YSIsInRpbWVzdGFtcCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImRhdGFTdHIiLCJKU09OIiwic3RyaW5naWZ5IiwibG9nZ2VyIiwiaW5mbyIsImxvZ01lc3NhZ2UiLCJhcHBlbmRGaWxlU3luYyIsImNvbnNvbGUiLCJsb2ciLCJlcnJvciIsImRlYnVnIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/lib/logger.ts\n");

/***/ }),

/***/ "(api)/./src/middleware/auth.ts":
/*!********************************!*\
  !*** ./src/middleware/auth.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authMiddleware: () => (/* binding */ authMiddleware),\n/* harmony export */   generateToken: () => (/* binding */ generateToken)\n/* harmony export */ });\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/models/User */ \"(api)/./src/models/User.ts\");\n\n\nconst JWT_SECRET = process.env.JWT_SECRET;\nif (!JWT_SECRET) {\n    throw new Error(\"Please define the JWT_SECRET environment variable inside .env.local\");\n}\nasync function authMiddleware(req, res, next) {\n    try {\n        console.log(\"\\n=== START: Auth Middleware ===\");\n        console.log(\"Method:\", req.method);\n        console.log(\"Path:\", req.url);\n        const authHeader = req.headers.authorization;\n        if (!authHeader?.startsWith(\"Bearer \")) {\n            console.log(\"No token provided\");\n            return res.status(401).json({\n                message: \"No token provided\"\n            });\n        }\n        const token = authHeader.split(\" \")[1];\n        console.log(\"Token received, verifying...\");\n        const decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().verify(token, JWT_SECRET);\n        console.log(\"Token verified, user ID:\", decoded.id);\n        const user = await _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findById(decoded.id).select(\"-password\");\n        if (!user) {\n            console.log(\"User not found for ID:\", decoded.id);\n            return res.status(401).json({\n                message: \"User not found\"\n            });\n        }\n        console.log(\"User found:\", user._id);\n        req.user = user;\n        console.log(\"=== END: Auth Middleware ===\\n\");\n        // Call the handler and catch any errors\n        try {\n            await next();\n        } catch (error) {\n            console.error(\"Error in route handler:\", error);\n            return res.status(500).json({\n                message: \"Internal server error\",\n                error: error instanceof Error ? error.message : \"Unknown error\"\n            });\n        }\n    } catch (error) {\n        console.error(\"Auth middleware error:\", error);\n        if (error instanceof (jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().JsonWebTokenError)) {\n            return res.status(401).json({\n                message: \"Invalid token\"\n            });\n        } else if (error instanceof (jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().TokenExpiredError)) {\n            return res.status(401).json({\n                message: \"Token expired\"\n            });\n        }\n        return res.status(401).json({\n            message: \"Authentication failed\"\n        });\n    }\n}\nfunction generateToken(userId) {\n    return jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().sign({\n        id: userId\n    }, JWT_SECRET, {\n        expiresIn: \"7d\"\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbWlkZGxld2FyZS9hdXRoLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQytCO0FBQ2E7QUFFNUMsTUFBTUUsYUFBYUMsUUFBUUMsR0FBRyxDQUFDRixVQUFVO0FBRXpDLElBQUksQ0FBQ0EsWUFBWTtJQUNmLE1BQU0sSUFBSUcsTUFBTTtBQUNsQjtBQU1PLGVBQWVDLGVBQ3BCQyxHQUF5QixFQUN6QkMsR0FBb0IsRUFDcEJDLElBQXlCO0lBRXpCLElBQUk7UUFDRkMsUUFBUUMsR0FBRyxDQUFDO1FBQ1pELFFBQVFDLEdBQUcsQ0FBQyxXQUFXSixJQUFJSyxNQUFNO1FBQ2pDRixRQUFRQyxHQUFHLENBQUMsU0FBU0osSUFBSU0sR0FBRztRQUU1QixNQUFNQyxhQUFhUCxJQUFJUSxPQUFPLENBQUNDLGFBQWE7UUFDNUMsSUFBSSxDQUFDRixZQUFZRyxXQUFXLFlBQVk7WUFDdENQLFFBQVFDLEdBQUcsQ0FBQztZQUNaLE9BQU9ILElBQUlVLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQUVDLFNBQVM7WUFBb0I7UUFDN0Q7UUFFQSxNQUFNQyxRQUFRUCxXQUFXUSxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUU7UUFDdENaLFFBQVFDLEdBQUcsQ0FBQztRQUVaLE1BQU1ZLFVBQVV2QiwwREFBVSxDQUFDcUIsT0FBT25CO1FBQ2xDUSxRQUFRQyxHQUFHLENBQUMsNEJBQTRCWSxRQUFRRSxFQUFFO1FBRWxELE1BQU1DLE9BQU8sTUFBTXpCLDhDQUFJQSxDQUFDMEIsUUFBUSxDQUFDSixRQUFRRSxFQUFFLEVBQUVHLE1BQU0sQ0FBQztRQUNwRCxJQUFJLENBQUNGLE1BQU07WUFDVGhCLFFBQVFDLEdBQUcsQ0FBQywwQkFBMEJZLFFBQVFFLEVBQUU7WUFDaEQsT0FBT2pCLElBQUlVLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQUVDLFNBQVM7WUFBaUI7UUFDMUQ7UUFFQVYsUUFBUUMsR0FBRyxDQUFDLGVBQWVlLEtBQUtHLEdBQUc7UUFDbkN0QixJQUFJbUIsSUFBSSxHQUFHQTtRQUVYaEIsUUFBUUMsR0FBRyxDQUFDO1FBRVosd0NBQXdDO1FBQ3hDLElBQUk7WUFDRixNQUFNRjtRQUNSLEVBQUUsT0FBT3FCLE9BQU87WUFDZHBCLFFBQVFvQixLQUFLLENBQUMsMkJBQTJCQTtZQUN6QyxPQUFPdEIsSUFBSVUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFDMUJDLFNBQVM7Z0JBQ1RVLE9BQU9BLGlCQUFpQnpCLFFBQVF5QixNQUFNVixPQUFPLEdBQUc7WUFDbEQ7UUFDRjtJQUNGLEVBQUUsT0FBT1UsT0FBTztRQUNkcEIsUUFBUW9CLEtBQUssQ0FBQywwQkFBMEJBO1FBQ3hDLElBQUlBLGlCQUFpQjlCLHVFQUFxQixFQUFFO1lBQzFDLE9BQU9RLElBQUlVLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQUVDLFNBQVM7WUFBZ0I7UUFDekQsT0FBTyxJQUFJVSxpQkFBaUI5Qix1RUFBcUIsRUFBRTtZQUNqRCxPQUFPUSxJQUFJVSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUFFQyxTQUFTO1lBQWdCO1FBQ3pEO1FBQ0EsT0FBT1osSUFBSVUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUFFQyxTQUFTO1FBQXdCO0lBQ2pFO0FBQ0Y7QUFFTyxTQUFTYSxjQUFjQyxNQUFjO0lBQzFDLE9BQU9sQyx3REFBUSxDQUFDO1FBQUV5QixJQUFJUztJQUFPLEdBQUdoQyxZQUFZO1FBQUVrQyxXQUFXO0lBQUs7QUFDaEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYWZldHktY2hlY2stbmV0d29yay8uL3NyYy9taWRkbGV3YXJlL2F1dGgudHM/YjlhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0QXBpUmVxdWVzdCwgTmV4dEFwaVJlc3BvbnNlIH0gZnJvbSAnbmV4dCc7XHJcbmltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJztcclxuaW1wb3J0IHsgVXNlciwgSVVzZXIgfSBmcm9tICdAL21vZGVscy9Vc2VyJztcclxuXHJcbmNvbnN0IEpXVF9TRUNSRVQgPSBwcm9jZXNzLmVudi5KV1RfU0VDUkVUO1xyXG5cclxuaWYgKCFKV1RfU0VDUkVUKSB7XHJcbiAgdGhyb3cgbmV3IEVycm9yKCdQbGVhc2UgZGVmaW5lIHRoZSBKV1RfU0VDUkVUIGVudmlyb25tZW50IHZhcmlhYmxlIGluc2lkZSAuZW52LmxvY2FsJyk7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQXV0aGVudGljYXRlZFJlcXVlc3QgZXh0ZW5kcyBOZXh0QXBpUmVxdWVzdCB7XHJcbiAgdXNlcj86IElVc2VyO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gYXV0aE1pZGRsZXdhcmUoXHJcbiAgcmVxOiBBdXRoZW50aWNhdGVkUmVxdWVzdCxcclxuICByZXM6IE5leHRBcGlSZXNwb25zZSxcclxuICBuZXh0OiAoKSA9PiBQcm9taXNlPHZvaWQ+XHJcbikge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zb2xlLmxvZygnXFxuPT09IFNUQVJUOiBBdXRoIE1pZGRsZXdhcmUgPT09Jyk7XHJcbiAgICBjb25zb2xlLmxvZygnTWV0aG9kOicsIHJlcS5tZXRob2QpO1xyXG4gICAgY29uc29sZS5sb2coJ1BhdGg6JywgcmVxLnVybCk7XHJcbiAgICBcclxuICAgIGNvbnN0IGF1dGhIZWFkZXIgPSByZXEuaGVhZGVycy5hdXRob3JpemF0aW9uO1xyXG4gICAgaWYgKCFhdXRoSGVhZGVyPy5zdGFydHNXaXRoKCdCZWFyZXIgJykpIHtcclxuICAgICAgY29uc29sZS5sb2coJ05vIHRva2VuIHByb3ZpZGVkJyk7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IG1lc3NhZ2U6ICdObyB0b2tlbiBwcm92aWRlZCcgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgdG9rZW4gPSBhdXRoSGVhZGVyLnNwbGl0KCcgJylbMV07XHJcbiAgICBjb25zb2xlLmxvZygnVG9rZW4gcmVjZWl2ZWQsIHZlcmlmeWluZy4uLicpO1xyXG4gICAgXHJcbiAgICBjb25zdCBkZWNvZGVkID0gand0LnZlcmlmeSh0b2tlbiwgSldUX1NFQ1JFVCkgYXMgeyBpZDogc3RyaW5nIH07XHJcbiAgICBjb25zb2xlLmxvZygnVG9rZW4gdmVyaWZpZWQsIHVzZXIgSUQ6JywgZGVjb2RlZC5pZCk7XHJcblxyXG4gICAgY29uc3QgdXNlciA9IGF3YWl0IFVzZXIuZmluZEJ5SWQoZGVjb2RlZC5pZCkuc2VsZWN0KCctcGFzc3dvcmQnKTtcclxuICAgIGlmICghdXNlcikge1xyXG4gICAgICBjb25zb2xlLmxvZygnVXNlciBub3QgZm91bmQgZm9yIElEOicsIGRlY29kZWQuaWQpO1xyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBtZXNzYWdlOiAnVXNlciBub3QgZm91bmQnIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnNvbGUubG9nKCdVc2VyIGZvdW5kOicsIHVzZXIuX2lkKTtcclxuICAgIHJlcS51c2VyID0gdXNlcjtcclxuXHJcbiAgICBjb25zb2xlLmxvZygnPT09IEVORDogQXV0aCBNaWRkbGV3YXJlID09PVxcbicpO1xyXG4gICAgXHJcbiAgICAvLyBDYWxsIHRoZSBoYW5kbGVyIGFuZCBjYXRjaCBhbnkgZXJyb3JzXHJcbiAgICB0cnkge1xyXG4gICAgICBhd2FpdCBuZXh0KCk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiByb3V0ZSBoYW5kbGVyOicsIGVycm9yKTtcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgXHJcbiAgICAgICAgbWVzc2FnZTogJ0ludGVybmFsIHNlcnZlciBlcnJvcicsXHJcbiAgICAgICAgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdBdXRoIG1pZGRsZXdhcmUgZXJyb3I6JywgZXJyb3IpO1xyXG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2Ygand0Lkpzb25XZWJUb2tlbkVycm9yKSB7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IG1lc3NhZ2U6ICdJbnZhbGlkIHRva2VuJyB9KTtcclxuICAgIH0gZWxzZSBpZiAoZXJyb3IgaW5zdGFuY2VvZiBqd3QuVG9rZW5FeHBpcmVkRXJyb3IpIHtcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgbWVzc2FnZTogJ1Rva2VuIGV4cGlyZWQnIH0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgbWVzc2FnZTogJ0F1dGhlbnRpY2F0aW9uIGZhaWxlZCcgfSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVUb2tlbih1c2VySWQ6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgcmV0dXJuIGp3dC5zaWduKHsgaWQ6IHVzZXJJZCB9LCBKV1RfU0VDUkVULCB7IGV4cGlyZXNJbjogJzdkJyB9KTtcclxufSAiXSwibmFtZXMiOlsiand0IiwiVXNlciIsIkpXVF9TRUNSRVQiLCJwcm9jZXNzIiwiZW52IiwiRXJyb3IiLCJhdXRoTWlkZGxld2FyZSIsInJlcSIsInJlcyIsIm5leHQiLCJjb25zb2xlIiwibG9nIiwibWV0aG9kIiwidXJsIiwiYXV0aEhlYWRlciIsImhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwic3RhcnRzV2l0aCIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwidG9rZW4iLCJzcGxpdCIsImRlY29kZWQiLCJ2ZXJpZnkiLCJpZCIsInVzZXIiLCJmaW5kQnlJZCIsInNlbGVjdCIsIl9pZCIsImVycm9yIiwiSnNvbldlYlRva2VuRXJyb3IiLCJUb2tlbkV4cGlyZWRFcnJvciIsImdlbmVyYXRlVG9rZW4iLCJ1c2VySWQiLCJzaWduIiwiZXhwaXJlc0luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/middleware/auth.ts\n");

/***/ }),

/***/ "(api)/./src/models/User.ts":
/*!****************************!*\
  !*** ./src/models/User.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   User: () => (/* binding */ User)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst userSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    email: {\n        type: String,\n        required: true,\n        unique: true,\n        trim: true,\n        lowercase: true\n    },\n    username: {\n        type: String,\n        required: true,\n        unique: true,\n        trim: true,\n        lowercase: true,\n        minlength: 3,\n        maxlength: 30,\n        match: [\n            /^[a-zA-Z0-9_]+$/,\n            \"Username can only contain letters, numbers and underscores\"\n        ]\n    },\n    password: {\n        type: String,\n        required: true,\n        minlength: 6\n    },\n    name: {\n        type: String,\n        required: true,\n        trim: true\n    },\n    friends: [\n        {\n            type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n            ref: \"User\"\n        }\n    ],\n    friendRequests: [\n        {\n            from: {\n                type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n                ref: \"User\",\n                required: true\n            },\n            createdAt: {\n                type: Date,\n                default: Date.now\n            }\n        }\n    ],\n    lastCheckIn: {\n        type: Date,\n        default: null\n    }\n}, {\n    timestamps: true\n});\n// Hash password before saving\nuserSchema.pre(\"save\", async function(next) {\n    if (!this.isModified(\"password\")) return next();\n    try {\n        const salt = await bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().genSalt(10);\n        this.password = await bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().hash(this.password, salt);\n        next();\n    } catch (error) {\n        next(error);\n    }\n});\n// Compare password method\nuserSchema.methods.comparePassword = async function(candidatePassword) {\n    return bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().compare(candidatePassword, this.password);\n};\nconst User = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).User || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model(\"User\", userSchema);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbW9kZWxzL1VzZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBZ0M7QUFDRjtBQWdCOUIsTUFBTUUsYUFBYSxJQUFJRix3REFBZSxDQUFDO0lBQ3JDSSxPQUFPO1FBQ0xDLE1BQU1DO1FBQ05DLFVBQVU7UUFDVkMsUUFBUTtRQUNSQyxNQUFNO1FBQ05DLFdBQVc7SUFDYjtJQUNBQyxVQUFVO1FBQ1JOLE1BQU1DO1FBQ05DLFVBQVU7UUFDVkMsUUFBUTtRQUNSQyxNQUFNO1FBQ05DLFdBQVc7UUFDWEUsV0FBVztRQUNYQyxXQUFXO1FBQ1hDLE9BQU87WUFBQztZQUFtQjtTQUE2RDtJQUMxRjtJQUNBQyxVQUFVO1FBQ1JWLE1BQU1DO1FBQ05DLFVBQVU7UUFDVkssV0FBVztJQUNiO0lBQ0FJLE1BQU07UUFDSlgsTUFBTUM7UUFDTkMsVUFBVTtRQUNWRSxNQUFNO0lBQ1I7SUFDQVEsU0FBUztRQUFDO1lBQ1JaLE1BQU1MLHdEQUFlLENBQUNrQixLQUFLLENBQUNDLFFBQVE7WUFDcENDLEtBQUs7UUFDUDtLQUFFO0lBQ0ZDLGdCQUFnQjtRQUFDO1lBQ2ZDLE1BQU07Z0JBQ0pqQixNQUFNTCx3REFBZSxDQUFDa0IsS0FBSyxDQUFDQyxRQUFRO2dCQUNwQ0MsS0FBSztnQkFDTGIsVUFBVTtZQUNaO1lBQ0FnQixXQUFXO2dCQUNUbEIsTUFBTW1CO2dCQUNOQyxTQUFTRCxLQUFLRSxHQUFHO1lBQ25CO1FBQ0Y7S0FBRTtJQUNGQyxhQUFhO1FBQ1h0QixNQUFNbUI7UUFDTkMsU0FBUztJQUNYO0FBQ0YsR0FBRztJQUNERyxZQUFZO0FBQ2Q7QUFFQSw4QkFBOEI7QUFDOUIxQixXQUFXMkIsR0FBRyxDQUFDLFFBQVEsZUFBZUMsSUFBSTtJQUN4QyxJQUFJLENBQUMsSUFBSSxDQUFDQyxVQUFVLENBQUMsYUFBYSxPQUFPRDtJQUV6QyxJQUFJO1FBQ0YsTUFBTUUsT0FBTyxNQUFNL0IsdURBQWMsQ0FBQztRQUNsQyxJQUFJLENBQUNjLFFBQVEsR0FBRyxNQUFNZCxvREFBVyxDQUFDLElBQUksQ0FBQ2MsUUFBUSxFQUFFaUI7UUFDakRGO0lBQ0YsRUFBRSxPQUFPSyxPQUFPO1FBQ2RMLEtBQUtLO0lBQ1A7QUFDRjtBQUVBLDBCQUEwQjtBQUMxQmpDLFdBQVdrQyxPQUFPLENBQUNDLGVBQWUsR0FBRyxlQUFlQyxpQkFBeUI7SUFDM0UsT0FBT3JDLHVEQUFjLENBQUNxQyxtQkFBbUIsSUFBSSxDQUFDdkIsUUFBUTtBQUN4RDtBQUVPLE1BQU15QixPQUFPeEMsd0RBQWUsQ0FBQ3dDLElBQUksSUFBSXhDLHFEQUFjLENBQVEsUUFBUUUsWUFBWSIsInNvdXJjZXMiOlsid2VicGFjazovL3NhZmV0eS1jaGVjay1uZXR3b3JrLy4vc3JjL21vZGVscy9Vc2VyLnRzPzA5NmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcclxuaW1wb3J0IGJjcnlwdCBmcm9tICdiY3J5cHRqcyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElVc2VyIGV4dGVuZHMgbW9uZ29vc2UuRG9jdW1lbnQge1xyXG4gIGVtYWlsOiBzdHJpbmc7XHJcbiAgcGFzc3dvcmQ6IHN0cmluZztcclxuICBuYW1lOiBzdHJpbmc7XHJcbiAgdXNlcm5hbWU6IHN0cmluZztcclxuICBmcmllbmRzOiBtb25nb29zZS5UeXBlcy5PYmplY3RJZFtdO1xyXG4gIGZyaWVuZFJlcXVlc3RzOiB7XHJcbiAgICBmcm9tOiBtb25nb29zZS5UeXBlcy5PYmplY3RJZDtcclxuICAgIGNyZWF0ZWRBdDogRGF0ZTtcclxuICB9W107XHJcbiAgbGFzdENoZWNrSW46IERhdGUgfCBudWxsO1xyXG4gIGNvbXBhcmVQYXNzd29yZChjYW5kaWRhdGVQYXNzd29yZDogc3RyaW5nKTogUHJvbWlzZTxib29sZWFuPjtcclxufVxyXG5cclxuY29uc3QgdXNlclNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xyXG4gIGVtYWlsOiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgIHVuaXF1ZTogdHJ1ZSxcclxuICAgIHRyaW06IHRydWUsXHJcbiAgICBsb3dlcmNhc2U6IHRydWUsXHJcbiAgfSxcclxuICB1c2VybmFtZToge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICB1bmlxdWU6IHRydWUsXHJcbiAgICB0cmltOiB0cnVlLFxyXG4gICAgbG93ZXJjYXNlOiB0cnVlLFxyXG4gICAgbWlubGVuZ3RoOiAzLFxyXG4gICAgbWF4bGVuZ3RoOiAzMCxcclxuICAgIG1hdGNoOiBbL15bYS16QS1aMC05X10rJC8sICdVc2VybmFtZSBjYW4gb25seSBjb250YWluIGxldHRlcnMsIG51bWJlcnMgYW5kIHVuZGVyc2NvcmVzJ11cclxuICB9LFxyXG4gIHBhc3N3b3JkOiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgIG1pbmxlbmd0aDogNixcclxuICB9LFxyXG4gIG5hbWU6IHtcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gICAgdHJpbTogdHJ1ZSxcclxuICB9LFxyXG4gIGZyaWVuZHM6IFt7XHJcbiAgICB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcbiAgICByZWY6ICdVc2VyJyxcclxuICB9XSxcclxuICBmcmllbmRSZXF1ZXN0czogW3tcclxuICAgIGZyb206IHtcclxuICAgICAgdHlwZTogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG4gICAgICByZWY6ICdVc2VyJyxcclxuICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgIH0sXHJcbiAgICBjcmVhdGVkQXQ6IHtcclxuICAgICAgdHlwZTogRGF0ZSxcclxuICAgICAgZGVmYXVsdDogRGF0ZS5ub3dcclxuICAgIH1cclxuICB9XSxcclxuICBsYXN0Q2hlY2tJbjoge1xyXG4gICAgdHlwZTogRGF0ZSxcclxuICAgIGRlZmF1bHQ6IG51bGwsXHJcbiAgfSxcclxufSwge1xyXG4gIHRpbWVzdGFtcHM6IHRydWUsXHJcbn0pO1xyXG5cclxuLy8gSGFzaCBwYXNzd29yZCBiZWZvcmUgc2F2aW5nXHJcbnVzZXJTY2hlbWEucHJlKCdzYXZlJywgYXN5bmMgZnVuY3Rpb24obmV4dCkge1xyXG4gIGlmICghdGhpcy5pc01vZGlmaWVkKCdwYXNzd29yZCcpKSByZXR1cm4gbmV4dCgpO1xyXG5cclxuICB0cnkge1xyXG4gICAgY29uc3Qgc2FsdCA9IGF3YWl0IGJjcnlwdC5nZW5TYWx0KDEwKTtcclxuICAgIHRoaXMucGFzc3dvcmQgPSBhd2FpdCBiY3J5cHQuaGFzaCh0aGlzLnBhc3N3b3JkLCBzYWx0KTtcclxuICAgIG5leHQoKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgbmV4dChlcnJvciBhcyBFcnJvcik7XHJcbiAgfVxyXG59KTtcclxuXHJcbi8vIENvbXBhcmUgcGFzc3dvcmQgbWV0aG9kXHJcbnVzZXJTY2hlbWEubWV0aG9kcy5jb21wYXJlUGFzc3dvcmQgPSBhc3luYyBmdW5jdGlvbihjYW5kaWRhdGVQYXNzd29yZDogc3RyaW5nKTogUHJvbWlzZTxib29sZWFuPiB7XHJcbiAgcmV0dXJuIGJjcnlwdC5jb21wYXJlKGNhbmRpZGF0ZVBhc3N3b3JkLCB0aGlzLnBhc3N3b3JkKTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBVc2VyID0gbW9uZ29vc2UubW9kZWxzLlVzZXIgfHwgbW9uZ29vc2UubW9kZWw8SVVzZXI+KCdVc2VyJywgdXNlclNjaGVtYSk7ICJdLCJuYW1lcyI6WyJtb25nb29zZSIsImJjcnlwdCIsInVzZXJTY2hlbWEiLCJTY2hlbWEiLCJlbWFpbCIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsInVuaXF1ZSIsInRyaW0iLCJsb3dlcmNhc2UiLCJ1c2VybmFtZSIsIm1pbmxlbmd0aCIsIm1heGxlbmd0aCIsIm1hdGNoIiwicGFzc3dvcmQiLCJuYW1lIiwiZnJpZW5kcyIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJmcmllbmRSZXF1ZXN0cyIsImZyb20iLCJjcmVhdGVkQXQiLCJEYXRlIiwiZGVmYXVsdCIsIm5vdyIsImxhc3RDaGVja0luIiwidGltZXN0YW1wcyIsInByZSIsIm5leHQiLCJpc01vZGlmaWVkIiwic2FsdCIsImdlblNhbHQiLCJoYXNoIiwiZXJyb3IiLCJtZXRob2RzIiwiY29tcGFyZVBhc3N3b3JkIiwiY2FuZGlkYXRlUGFzc3dvcmQiLCJjb21wYXJlIiwiVXNlciIsIm1vZGVscyIsIm1vZGVsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/models/User.ts\n");

/***/ }),

/***/ "(api)/./src/pages/api/user/friends.ts":
/*!***************************************!*\
  !*** ./src/pages/api/user/friends.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ withAuth)\n/* harmony export */ });\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/db */ \"(api)/./src/lib/db.ts\");\n/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/models/User */ \"(api)/./src/models/User.ts\");\n/* harmony import */ var _middleware_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/middleware/auth */ \"(api)/./src/middleware/auth.ts\");\n/* harmony import */ var _lib_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/logger */ \"(api)/./src/lib/logger.ts\");\n\n\n\n\nasync function handler(req, res) {\n    console.log(\"Friends API called with method:\", req.method);\n    if (![\n        \"GET\",\n        \"POST\",\n        \"DELETE\",\n        \"PUT\",\n        \"PATCH\"\n    ].includes(req.method || \"\")) {\n        return res.status(405).json({\n            message: \"Method not allowed\"\n        });\n    }\n    try {\n        // Connect to database\n        try {\n            console.log(\"Attempting to connect to MongoDB...\");\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n            console.log(\"Successfully connected to MongoDB\");\n        } catch (error) {\n            console.error(\"Database connection error:\", error);\n            return res.status(500).json({\n                message: \"Database connection failed\",\n                error: error instanceof Error ? error.message : \"Unknown error\"\n            });\n        }\n        if (!req.user) {\n            console.log(\"No user found in request\");\n            return res.status(401).json({\n                message: \"Not authenticated\"\n            });\n        }\n        console.log(\"User found in request:\", req.user._id);\n        const user = req.user;\n        // GET: Fetch friends list and friend requests\n        if (req.method === \"GET\") {\n            try {\n                // First try to find the user without population to ensure they exist\n                console.log(\"Looking up user:\", user._id);\n                const userExists = await _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findById(user._id);\n                if (!userExists) {\n                    console.error(\"User not found in database:\", user._id);\n                    return res.status(404).json({\n                        message: \"User not found\"\n                    });\n                }\n                console.log(\"Found user in database\");\n                // Then populate the data\n                console.log(\"Populating user data...\");\n                const userWithData = await _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findById(user._id).populate({\n                    path: \"friends\",\n                    select: \"name email username lastCheckIn\"\n                }).populate({\n                    path: \"friendRequests.from\",\n                    select: \"name email username\"\n                }).select(\"friends friendRequests\").lean();\n                if (!userWithData) {\n                    console.error(\"Failed to populate user data:\", user._id);\n                    return res.status(500).json({\n                        message: \"Failed to fetch user data\"\n                    });\n                }\n                console.log(\"Successfully populated user data\");\n                // Safely map friends with error handling\n                console.log(\"Raw friends data:\", userWithData.friends);\n                const friends = (userWithData.friends || []).filter((friend)=>friend && friend._id).map((friend)=>({\n                        id: friend._id.toString(),\n                        name: friend.name,\n                        username: friend.username,\n                        email: friend.email,\n                        lastCheckIn: friend.lastCheckIn\n                    }));\n                console.log(\"Processed friends:\", friends.length);\n                // Safely map friend requests with error handling\n                console.log(\"Raw friend requests data:\", userWithData.friendRequests);\n                const friendRequests = (userWithData.friendRequests || []).filter((request)=>request && request.from && request.from._id).map((request)=>({\n                        id: request.from._id.toString(),\n                        name: request.from.name,\n                        username: request.from.username || \"\",\n                        email: request.from.email,\n                        createdAt: request.createdAt\n                    }));\n                console.log(\"Processed friend requests:\", friendRequests.length);\n                return res.status(200).json({\n                    friends,\n                    friendRequests\n                });\n            } catch (error) {\n                console.error(\"Error fetching friends and requests:\", error);\n                return res.status(500).json({\n                    message: \"Error fetching friends and requests\",\n                    error: error instanceof Error ? error.message : \"Unknown error\"\n                });\n            }\n        }\n        const { username } = req.body;\n        if (!username) {\n            return res.status(400).json({\n                message: \"Username is required\"\n            });\n        }\n        // POST: Send a friend request\n        if (req.method === \"POST\") {\n            try {\n                // Check if friend exists\n                const friend = await _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findOne({\n                    username: username.toLowerCase()\n                });\n                if (!friend) {\n                    return res.status(404).json({\n                        message: \"User not found\"\n                    });\n                }\n                // Can't add yourself\n                if (friend._id.toString() === user._id.toString()) {\n                    return res.status(400).json({\n                        message: \"Cannot add yourself as a friend\"\n                    });\n                }\n                // Check if already friends\n                const areFriends = user.friends.some((friendId)=>friendId.toString() === friend._id.toString());\n                if (areFriends) {\n                    return res.status(400).json({\n                        message: \"Already friends\"\n                    });\n                }\n                // Check if friend request already sent\n                const existingRequest = friend.friendRequests.find((request)=>request.from.toString() === user._id.toString());\n                if (existingRequest) {\n                    return res.status(400).json({\n                        message: \"Friend request already sent\"\n                    });\n                }\n                // Check if they sent you a request\n                const theirRequest = user.friendRequests.find((request)=>request.from.toString() === friend._id.toString());\n                if (theirRequest) {\n                    return res.status(400).json({\n                        message: \"This user has already sent you a friend request. Check your friend requests to accept it.\"\n                    });\n                }\n                // Add friend request\n                await _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findByIdAndUpdate(friend._id, {\n                    $push: {\n                        friendRequests: {\n                            from: user._id,\n                            createdAt: new Date()\n                        }\n                    }\n                }, {\n                    new: true\n                });\n                return res.status(200).json({\n                    message: \"Friend request sent successfully\"\n                });\n            } catch (error) {\n                console.error(\"Error sending friend request:\", error);\n                return res.status(500).json({\n                    message: \"Error sending friend request\"\n                });\n            }\n        }\n        // PUT: Accept a friend request\n        if (req.method === \"PUT\") {\n            try {\n                _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.info(\"=== START: Friend Request Acceptance ===\");\n                _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.debug(\"Request body:\", req.body);\n                _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.debug(\"Username from request:\", username);\n                _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.debug(\"Current user:\", {\n                    id: user._id,\n                    username: user.username\n                });\n                if (!username) {\n                    _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.error(\"No username provided in request\");\n                    return res.status(400).json({\n                        message: \"Username is required\"\n                    });\n                }\n                // First get the fully populated user document to access friend request details\n                _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.debug(\"Fetching current user with populated data...\");\n                const currentUser = await _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findById(user._id).populate({\n                    path: \"friendRequests.from\",\n                    select: \"name email username\"\n                }).exec();\n                if (!currentUser) {\n                    _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.error(\"Could not find current user with populated data\");\n                    return res.status(500).json({\n                        message: \"Error loading user data\"\n                    });\n                }\n                // Find the friend by username first\n                const friend = await _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findOne({\n                    username: username.toLowerCase()\n                });\n                if (!friend) {\n                    _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.error(\"Friend not found with username:\", username);\n                    return res.status(404).json({\n                        message: \"User not found\"\n                    });\n                }\n                // Check if friend request exists by ID\n                _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.debug(\"Looking for friend request...\");\n                const pendingRequest = currentUser.friendRequests.find((request)=>request.from._id.toString() === friend._id.toString());\n                if (!pendingRequest) {\n                    _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.error(\"No friend request found for user:\", {\n                        friendId: friend._id,\n                        username: friend.username,\n                        availableRequests: currentUser.friendRequests.map((r)=>({\n                                id: r.from._id,\n                                username: r.from.username\n                            }))\n                    });\n                    return res.status(400).json({\n                        message: \"No friend request found from this user\",\n                        debug: {\n                            requestedUsername: username,\n                            availableRequests: currentUser.friendRequests.map((r)=>r.from.username)\n                        }\n                    });\n                }\n                _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.debug(\"Found pending request:\", {\n                    from: {\n                        id: pendingRequest.from._id,\n                        username: friend.username\n                    }\n                });\n                // Update both users\n                _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.info(\"Updating both users...\");\n                try {\n                    const [updatedUser] = await Promise.all([\n                        _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findByIdAndUpdate(currentUser._id, {\n                            $push: {\n                                friends: friend._id\n                            },\n                            $pull: {\n                                friendRequests: {\n                                    from: friend._id\n                                }\n                            }\n                        }, {\n                            new: true\n                        }).exec(),\n                        _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findByIdAndUpdate(friend._id, {\n                            $push: {\n                                friends: currentUser._id\n                            }\n                        }, {\n                            new: true\n                        }).exec()\n                    ]);\n                    _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.info(\"Updates successful\");\n                    _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.debug(\"Updated user friends:\", updatedUser?.friends);\n                    return res.status(200).json({\n                        message: \"Friend request accepted successfully\",\n                        friend: {\n                            id: friend._id,\n                            name: friend.name,\n                            username: friend.username,\n                            email: friend.email\n                        }\n                    });\n                } catch (updateError) {\n                    _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.error(\"Error during user updates:\", updateError);\n                    throw updateError;\n                }\n            } catch (error) {\n                _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.error(\"Error accepting friend request:\", error);\n                return res.status(500).json({\n                    message: \"Error accepting friend request\",\n                    error: error instanceof Error ? error.message : \"Unknown error\"\n                });\n            }\n        }\n        // DELETE: Reject/remove a friend request\n        if (req.method === \"DELETE\") {\n            try {\n                _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.info(\"=== START: Friend Request Rejection ===\");\n                _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.debug(\"Request body:\", req.body);\n                const { username, userId } = req.body;\n                if (!username && !userId) {\n                    _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.error(\"No username or userId provided\");\n                    return res.status(400).json({\n                        message: \"Username or userId is required\"\n                    });\n                }\n                // First get the fully populated user document\n                _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.debug(\"Fetching current user with populated data...\");\n                const currentUser = await _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findById(user._id).populate({\n                    path: \"friendRequests.from\",\n                    select: \"name email username\"\n                }).exec();\n                if (!currentUser) {\n                    _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.error(\"Could not find current user with populated data\");\n                    return res.status(500).json({\n                        message: \"Error loading user data\"\n                    });\n                }\n                let requestToRemove;\n                if (userId) {\n                    // Find by ID\n                    requestToRemove = currentUser.friendRequests.find((request)=>request.from._id.toString() === userId);\n                } else {\n                    // Find by username\n                    requestToRemove = currentUser.friendRequests.find((request)=>request.from.username?.toLowerCase() === username.toLowerCase());\n                }\n                if (!requestToRemove) {\n                    _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.error(\"No friend request found to reject:\", {\n                        username,\n                        userId\n                    });\n                    return res.status(400).json({\n                        message: \"No friend request found from this user\"\n                    });\n                }\n                _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.debug(\"Found request to remove:\", {\n                    from: {\n                        id: requestToRemove.from._id,\n                        name: requestToRemove.from.name,\n                        email: requestToRemove.from.email\n                    }\n                });\n                // Remove the request\n                await _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findByIdAndUpdate(currentUser._id, {\n                    $pull: {\n                        friendRequests: {\n                            from: requestToRemove.from._id\n                        }\n                    }\n                }, {\n                    new: true\n                });\n                _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.info(\"Friend request rejected successfully\");\n                return res.status(200).json({\n                    message: \"Friend request rejected\"\n                });\n            } catch (error) {\n                _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.error(\"Error rejecting friend request:\", error);\n                return res.status(500).json({\n                    message: \"Error rejecting friend request\"\n                });\n            }\n        }\n        // PATCH: Update user (temporary endpoint for fixing lilo's username)\n        if (req.method === \"PATCH\") {\n            try {\n                _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.info(\"=== START: User Update ===\");\n                // Only allow updating lilo's record\n                const liloId = \"684ebc174ef1c1e06472b747\";\n                const updatedUser = await _models_User__WEBPACK_IMPORTED_MODULE_1__.User.findByIdAndUpdate(liloId, {\n                    $set: {\n                        username: \"lilo_stitch\"\n                    }\n                }, {\n                    new: true\n                });\n                if (!updatedUser) {\n                    _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.error(\"Could not find lilo's user record\");\n                    return res.status(404).json({\n                        message: \"User not found\"\n                    });\n                }\n                _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.info(\"Successfully updated lilo's username\");\n                return res.status(200).json({\n                    message: \"Username updated successfully\",\n                    user: {\n                        id: updatedUser._id,\n                        name: updatedUser.name,\n                        username: updatedUser.username,\n                        email: updatedUser.email\n                    }\n                });\n            } catch (error) {\n                _lib_logger__WEBPACK_IMPORTED_MODULE_3__.logger.error(\"Error updating user:\", error);\n                return res.status(500).json({\n                    message: \"Error updating user\"\n                });\n            }\n        }\n    } catch (error) {\n        console.error(\"Friends operation error:\", error);\n        return res.status(500).json({\n            message: \"Error processing friends operation\"\n        });\n    }\n}\nfunction withAuth(req, res) {\n    return (0,_middleware_auth__WEBPACK_IMPORTED_MODULE_2__.authMiddleware)(req, res, ()=>handler(req, res));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/user/friends.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fuser%2Ffriends&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cuser%5Cfriends.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();